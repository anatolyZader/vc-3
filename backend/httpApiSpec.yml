openapi: 1.0.0
info:
  title: Git Business Module API
  description: API for repository and wiki management using Fastify, GitHub, and PostgreSQL.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    repoId:
      name: repoId
      in: path
      required: true
      description: Repository ID in "owner/repo" format.
      schema:
        type: string

  schemas:
    RepositoryResponse:
      type: object
      properties:
        repository:
          type: object
          description: Repository data from GitHub API
        branch:
          type: object
          description: Branch data from GitHub API

    WikiResponse:
      type: object
      properties:
        wiki:
          type: string
          format: binary
          description: Wiki zip archive or wiki content

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        details:
          type: object
          nullable: true

security:
  - bearerAuth: []

paths:
  /repositories/{repoId}:
    get:
      summary: Fetch repository by ID
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/repoId'
      responses:
        '200':
          description: Repository information and branch details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /repositories/{repoId}/wiki:
    get:
      summary: Fetch wiki for a repository
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/repoId'
      responses:
        '200':
          description: Wiki file (zip or content)
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/WikiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/WikiResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Wiki not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects:
    post:
      summary: Create a new git project
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                type: object
                properties:
                  projectId:
                    type: string
                  title:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{projectId}/repositories:
    post:
      summary: Add a repository to a project
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - repoId
              properties:
                repoId:
                  type: string
      responses:
        '200':
          description: Repository added to project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'