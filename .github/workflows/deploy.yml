name: Full deploy

on:
  push:
    branches: [amber] 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      GCP_PROJECT: eventstorm-1
      REGION: me-west1
      GCP_BUCKET: eventstorm-bucket
      REDIS_HOST: 10.187.8.27

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # Cache client node_modules
    - name: Cache client node_modules
      uses: actions/cache@v4
      with:
        path: client/node_modules
        key: ${{ runner.os }}-client-node-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-client-node-

    # Cache backend node_modules
    - name: Cache backend node_modules
      uses: actions/cache@v4
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-node-

    # 1. Authenticate first!
    - name: Authenticate with GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # 2. Now setttttt up the Cloud SDK
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GCP_PROJECT }}

    # 3. Now debug/check auth
    - name: Debug GCP Auth
      run: |
        gcloud auth list
        gcloud config list
        gsutil ls gs://$GCP_BUCKET/

    # 4. Set up Node.js for both client and backend
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    # --- FRONTEND: Build and Upload to GCP Storage ---
    - name: Build React client
      run: |
        cd client
        npm ci
        npm run build

    - name: Clear existing files in bucket
      run: |
        gsutil -m rm -r gs://$GCP_BUCKET/** || true

    - name: Upload static files to a bucket
      run: |
        gsutil -m rsync -r ./client/dist gs://$GCP_BUCKET/

    # --- BACKEND generate openapi spec an deploy Fastify backend to Cloud Run from source---

    - name: Remove backend node_modules and npm cache
      run: |
        rm -rf backend/node_modules
        npm cache clean --force

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Generate openapi.json (dump OpenAPI spec)
      run: |
        cd backend
        npm run dump:openapi

    - name: deploy backend to Cloud Run
      run: |
        cd backend
        gcloud run deploy eventstorm-backend \
        --source . \
        --region $REGION \
        --project $GCP_PROJECT \
        --platform managed \
        --vpc-connector=cr-vpc-conn \
        --allow-unauthenticated \
        --set-secrets=USER_OAUTH2_CREDENTIALS=google-creds:latest \
        --set-env-vars=NODE_ENV=production,REDIS_PORT=6379,PG_USER=postgres,PG_DATABASE=eventstorm_db,JWT_EXPIRE_IN=1h,REDIS_HOST=$REDIS_HOST,CLOUD_SQL_CONNECTION_NAME=eventstorm-1:me-west1:eventstorm-pg-instance,DUMMY=MUDDYY \
        --set-secrets=JWT_SECRET=jwt-secret:latest,GCP_OAUTH2_CLIENT_SECRET=google-oauth2-secret:latest,PG_PASSWORD=pg-pwd:latest,COOKIE_SECRET=cookie-secret:latest,SESSION_SECRET=session-secret:latest,GITHUB_TOKEN=github-token:latest